// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now())
  user_id   Int
  user      User     @relation(fields: [user_id], references: [id])
  post_id   Int
  post      Post     @relation(fields: [post_id], references: [id])
}

model Post {
  id          Int            @id @default(autoincrement())
  title       String
  desc        String?
  content     String         @db.Text
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @default(now()) @updatedAt()
  publishDate DateTime       @default(now())
  img         String?
  views       Int            @default(0)
  authorId    Int
  author      User           @relation(fields: [authorId], references: [id])
  comments    Comment[]
  categories  PostCategory[]
}

model User {
  id                 Int       @id @default(autoincrement())
  email              String    @unique
  name               String
  password           String
  hashedRefreshToken String?
  role               Role      @default(USER)
  comments           Comment[]
  posts              Post[]
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @default(now()) @updatedAt()
}

model Category {
  id    Int            @id @default(autoincrement())
  title String         @unique
  img   String?
  posts PostCategory[]
}

model PostCategory {
  postId     Int      @map("post_id")
  categoryId Int      @map("category_id")
  post       Post     @relation(fields: [postId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([postId, categoryId])
}

enum Role {
  ADMIN
  EDITOR
  USER
}
