// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Comment {
  id        String   @id @default(uuid())
  text      String
  createdAt DateTime @default(now())
  user_id   String
  user      User     @relation(fields: [user_id], references: [id])
  post_id   String
  post      Post     @relation(fields: [post_id], references: [id])
}

model Post {
  id           String         @id @default(uuid())
  title        String
  content      String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  img          String?
  views        Int            @default(0)
  authorId     String
  author       User           @relation(fields: [authorId], references: [id])
  comments     Comment[]
  categories   Category[]     @relation("PostCategories")
  PostCategory PostCategory[]
}

model User {
  id                 String    @id @default(uuid())
  email              String    @unique
  name               String
  password           String
  hashedRefreshToken String?
  role               Role      @default(USER)
  comments           Comment[]
  posts              Post[]
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
}

model Category {
  id           String         @id @default(uuid())
  title        String
  img          String?
  posts        Post[]         @relation("PostCategories")
  PostCategory PostCategory[]
}

model PostCategory {
  postId     String
  categoryId String
  post       Post     @relation(fields: [postId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([postId, categoryId])
}

enum Role {
  ADMIN
  EDITOR
  USER
}
